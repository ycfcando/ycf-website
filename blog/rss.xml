<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Real Own Things Blog</title>
        <link>https://ycfcando.github.io/my-website/blog</link>
        <description>Real Own Things Blog</description>
        <lastBuildDate>Sat, 16 Jul 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[构建自己的知识库]]></title>
            <link>https://ycfcando.github.io/my-website/blog/how-to-record</link>
            <guid>how-to-record</guid>
            <pubDate>Sat, 16 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[为什么要构建知识库]]></description>
            <content:encoded><![CDATA[<h4 class="anchor anchorWithStickyNavbar_LWe7" id="为什么要构建知识库">为什么要构建知识库<a class="hash-link" href="#为什么要构建知识库" title="标题的直接链接">​</a></h4><p>学习过程中往往死的知识点我们需要存贮起来，因此我们需要构建自己的知识库。为了方便使用，一般知识库需要满足两点：结构联系、有实际意义，结构联系能方便我们快速查找某个或某块知识点，有实际意义能帮助我们减少记录无用知识，并保证在我们实践场合能100%被使用，总而言之知识体量很大我们只会记录自己要使用的</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="如何构建知识库">如何构建知识库<a class="hash-link" href="#如何构建知识库" title="标题的直接链接">​</a></h4><p>1、要想有知识库结构化，最常见的有按知识本身分类比如：git作为一个知识类，react作为一个知识类。这样做的优点是当你遇到那块相关的知识不懂，直接找相关知识类就能找到。但是往往我们所要做的实践会涉及多个知识类，因此当我们要把此实践看作一个整体去解决时，单一的知识类已经不能解决我们的问题了，因为松散的知识类需要我们自己组合才能完成这个实践，作为知识库没有了意义。
所以我们会自然而然的把一块实践抽象为一个知识点，这种结构化，我称之为行为的知识结构化，这种结构化往往涉及多种知识，但是整体记录的是一种知识实践。当我们哪块知识类不懂时查阅相关知识类。这种记录知识实践的知识结构化往往是最有效的，因为我们遇到的问题都是知识实践问题。但两种知识结构化并非鱼和熊掌不可兼得，我们可以并用。
那么如何并用呢，我们可以将知识类记录和知识实践记录分开。但是知识实践中我们遗忘的部分如何在知识类中快速找到呢，换句话说知识实践如何关联知识类。标签，我们可以用标签的形式关联知识类，可以不完全，只要主要的知识类关联就行。但其实这种关联大类的方式和我们自己去找貌似没有区别，只有在关联知识类下的某个小类才能提升我们查找效率，但要定位关联的小类是繁琐的，前提是我们在脑中已经构建了结构。所以关联标签突然变的没有意义了，更重要的是我们脑中是否有这个概念。还有一个问题如何分类抽象实践，我这里想到的方式是，用一个更大的抽象实践涵盖比如：前端开发环境搭建-&gt;git配置、前端好用的vscode插件、npm配置、nvm管理node等等。知识类的分类可以按照实践意义分类
结论：构建知识库的第一点，用知识类与抽象成知识实践的记录方式来完成知识库的构建，并将两者分开记录。</p><p>2、记录的知识库要有实际意义，简单方式就是我用到什么记录什么，知识是无限的，在我们记录的知识范围内，应该是具有实际意义的而不是字典的形式。知识类就记录实践中要用到的，抽象实践不需要注意，因为他本身就是实践</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a class="hash-link" href="#总结" title="标题的直接链接">​</a></h4><p>1、知识类与抽象实践共同来构建知识库，抽象实践可以用更大的抽象实践分类，知识类可以用实践意义分类
2、知识类记录我们要用的，不要像记字典一样</p>]]></content:encoded>
        </item>
    </channel>
</rss>